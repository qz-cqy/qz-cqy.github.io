<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://blog.ak-ioi.cf</id>
    <title>rui_er 的博客</title>
    <updated>2020-08-18T00:01:16.267Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://blog.ak-ioi.cf"/>
    <link rel="self" href="https://blog.ak-ioi.cf/atom.xml"/>
    <subtitle>三思而后码</subtitle>
    <logo>https://blog.ak-ioi.cf/images/avatar.png</logo>
    <icon>https://blog.ak-ioi.cf/favicon.ico</icon>
    <rights>All rights reserved 2020, rui_er 的博客</rights>
    <entry>
        <title type="html"><![CDATA[uTools —— 多功能、简洁、好用的插件集，你值得拥有！]]></title>
        <id>https://blog.ak-ioi.cf/post/utools/</id>
        <link href="https://blog.ak-ioi.cf/post/utools/">
        </link>
        <updated>2020-08-17T06:23:51.000Z</updated>
        <summary type="html"><![CDATA[<p>你是否感觉 Windows 自带的应用搜索功能使用繁琐？你是否希望获得各种各样的实用插件并只想简单配置？网络开发时，有不懂的 CSS / js 内容？始终找不到你想用的 linux 指令？</p>
<p>别担心，uTools 插件集可以满足你！</p>
]]></summary>
        <content type="html"><![CDATA[<p>你是否感觉 Windows 自带的应用搜索功能使用繁琐？你是否希望获得各种各样的实用插件并只想简单配置？网络开发时，有不懂的 CSS / js 内容？始终找不到你想用的 linux 指令？</p>
<p>别担心，uTools 插件集可以满足你！</p>
<!-- more -->
<p>由于洛谷图床的限制可能导致图片无法加载，建议前往<a href="https://www.luogu.com.cn/blog/ak-ioi/utools">洛谷博客</a>查看。</p>
<h1 id="安装">安装</h1>
<p>uTools 目前支持的操作系统有：Windows（Win7 及以上，32 位或 64 位）、macOS（OS X 10.10 Yosemite 及以上）和 Linux（Deepin 15 或 Ubuntu 18 及以上）。笔者写这篇文章时版本号为 1.2.0。</p>
<p>首先，进入 <a href="http://u.tools">uTools 官网</a>，点击“免费下载”，即可看到三种操作系统的下载选项。下面以 Windows10 物理机和 Ubuntu18.04.3 虚拟机为例：</p>
<h2 id="windows10-操作系统">Windows10 操作系统</h2>
<p>点击 Windows 下载后，会下载一个叫做 <code>uTools-1.2.0.exe</code> 的文件，双击安装。</p>
<p>安装过后，根据提示，按 Alt+Space 打开如下图的一个窗口：<img src="https://cdn.luogu.com.cn/upload/image_hosting/v22lpvmu.png" alt="" loading="lazy"></p>
<p>即为安装成功。</p>
<h2 id="ubuntu18043-操作系统">Ubuntu18.04.3 操作系统</h2>
<p>以同样的方式下载，得到文件 <code>utools_1.2.0_amd64.deb</code>。</p>
<p>打开命令行（终端），输入 <code>sudo su</code> ，输入密码，进入管理员（超级用户）权限。使用 cd 命令进入下载到的文件夹中，输入 <code>dpkg -i utools_1.2.0_amd64.deb</code>，在左下方点击 show applications，在列表中可以找到 utools，点击或按 Alt+Space 发开同样的窗口即为成功。</p>
<h1 id="快捷应用搜索">快捷应用搜索</h1>
<p>下面以 Windows 为例演示快捷应用搜索：使用 Windows 自带的搜索功能打开记事本，一般需要 Win+R 或在下方搜索栏输入 <code>notepad</code> 或 <code>jishiben</code> 才可以打开，但是在 Alt+Space 打开 uTools 后，输入 <code>jsb</code> 即可搜索到，其他应用同理。</p>
<p>uTools 的搜索功能更加方便中国用户的汉字 / 拼音搜索，只需要输入首字母即可显示所有可以与之匹配的应用或插件，可以说方便得多。</p>
<figure data-type="image" tabindex="1"><img src="https://cdn.luogu.com.cn/upload/image_hosting/j9qs9ota.png" alt="" loading="lazy"></figure>
<h1 id="插件中心">插件中心</h1>
<p>还是在这个页面，点击右侧的图标即可进入 uTools 的插件中心。若要返回，只需要在上方输入框中按退格键。</p>
<figure data-type="image" tabindex="2"><img src="https://cdn.luogu.com.cn/upload/image_hosting/p33xmgki.png" alt="" loading="lazy"></figure>
<p>在这个界面，点击你想下载的插件，即可弹出“插件详情”窗口，在右侧有一个“下载”按钮，如果下载后想要卸载，也是在这个界面。（下图为下载过插件后的样子）</p>
<figure data-type="image" tabindex="3"><img src="https://cdn.luogu.com.cn/upload/image_hosting/rofjleg3.png" alt="" loading="lazy"></figure>
<p>当然，插件可不止你看到的这么一点！把界面拉到最下方，点击“查看全部插件”里面有更多的可用插件，这里面也有很多好用的插件，千万不要错过了！</p>
<figure data-type="image" tabindex="4"><img src="https://cdn.luogu.com.cn/upload/image_hosting/rba7rj2x.png" alt="" loading="lazy"></figure>
<h1 id="管理插件">管理插件</h1>
<p>下载了插件，怎么进行配置呢？下面以几个插件为例，讲解配置方法。</p>
<h2 id="剪切板">剪切板</h2>
<p>在插件详情界面点击“功能关键字”，点击下方的一个标签，即可查看这个标签下的所有下载过的插件。</p>
<figure data-type="image" tabindex="5"><img src="https://cdn.luogu.com.cn/upload/image_hosting/p2h8cu48.png" alt="" loading="lazy"></figure>
<p>这个插件的功能是保存下载插件后的剪切板内容历史记录。下图是截止目前为了写这篇文章笔者保存的剪切板的一部分。</p>
<figure data-type="image" tabindex="6"><img src="https://cdn.luogu.com.cn/upload/image_hosting/uhm06pqe.png" alt="" loading="lazy"></figure>
<p>想要返回前几步，在输入栏按退格键即可。</p>
<h2 id="内网穿透">内网穿透</h2>
<p>这里我没有在内网设置网站，且用于演示的外网地址已经关闭。</p>
<p>同样的方法进入内网穿透的管理面板，如下配置：</p>
<figure data-type="image" tabindex="7"><img src="https://cdn.luogu.com.cn/upload/image_hosting/hoa177qh.png" alt="" loading="lazy"></figure>
<p>点击连接按钮，看到如下提示即为成功，否则请按照提示更改配置：</p>
<figure data-type="image" tabindex="8"><img src="https://cdn.luogu.com.cn/upload/image_hosting/jqb2zi3z.png" alt="" loading="lazy"></figure>
<p>这里可以选择 TCP / 本地目录 / HTTP 三种隧道类型，uTools 的限制为最多开通三条隧道，且不支持绑定自定义域名。</p>
<h2 id="linux-命令文档">Linux 命令文档</h2>
<p>进入 Linux 命令文档，可以看到如下界面：</p>
<figure data-type="image" tabindex="9"><img src="https://cdn.luogu.com.cn/upload/image_hosting/gyqo6zpe.png" alt="" loading="lazy"></figure>
<p>左侧的目录按照字典序排列，从 ab 到 cat，剩余命令要通过搜索功能找到，搜索方法与上方应用搜索相同。</p>
<figure data-type="image" tabindex="10"><img src="https://cdn.luogu.com.cn/upload/image_hosting/5uledbio.png" alt="" loading="lazy"></figure>
<figure data-type="image" tabindex="11"><img src="https://cdn.luogu.com.cn/upload/image_hosting/nj1gmais.png" alt="" loading="lazy"></figure>
<p>当然，我们也可以通过关键字进行搜索：</p>
<figure data-type="image" tabindex="12"><img src="https://cdn.luogu.com.cn/upload/image_hosting/t1hefq0l.png" alt="" loading="lazy"></figure>
<p>每一栏中都有详细的用法解释。</p>
<h2 id="计算稿纸">计算稿纸</h2>
<p>计算稿纸是一个数学的草稿纸插件，我们可以写数学公式，自动计算出结果。</p>
<p>例如下面这个式子：<code>19260817-114514-1919810+998244353</code></p>
<figure data-type="image" tabindex="13"><img src="https://cdn.luogu.com.cn/upload/image_hosting/p5at9hvk.png" alt="" loading="lazy"></figure>
<p>这个工具的功能可不止这些！里面还有一些函数也可以使用：<code>sqrt(100)+2^12-log(e^5)+pi</code></p>
<figure data-type="image" tabindex="14"><img src="https://cdn.luogu.com.cn/upload/image_hosting/wsjvc2st.png" alt="" loading="lazy"></figure>
<p>但他也有一些缺点，例如不能设未知数、函数等。</p>
<h1 id="开发插件">开发插件</h1>
<p>在 uTools 的官方 wiki 中，有关于开发插件的详细介绍 <a href="http://u.tools/docs/developer/welcome.html#plugin-json">地址</a>。</p>
<p>本人并没有尝试过，因为对于平常使用来说，这个功能基本是不需要的，因此在这里也不做另外说明了，感兴趣的话可以去 wiki 查看官方的解释。</p>
<h1 id="结语-faq">结语 &amp; FAQ</h1>
<p>以上就是 uTools 的基本功能了，是否感觉非常实用呢？可以下载一个使用哦~</p>
<p>码字不易，如果您觉得这篇文章介绍的内容对您有帮助，就给个赞吧 QwQ~</p>
<p>如果对本文介绍到的功能有问题，欢迎在评论区或私信留言！不保证所有问题均可以在我这里得到解答，可以尝试阅读<a href="http://u.tools/docs/guide/about-uTools.html#utools%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F">官方文档</a>，或在<a href="https://yuanliao.info/">官方论坛</a>提出你的问题，等待官方或其他人的解决。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[APIO2020 —— 从报名到爆零 & 总结]]></title>
        <id>https://blog.ak-ioi.cf/post/i-ak-apio2020/</id>
        <link href="https://blog.ak-ioi.cf/post/i-ak-apio2020/">
        </link>
        <updated>2020-08-16T04:34:13.000Z</updated>
        <content type="html"><![CDATA[<p>URL 只是按照惯例写的。</p>
<p>根据 APIO 官方要求，本博客在 <code>Monday, 17 August 2020 (08:00 UTC+7)</code>（北京时间 2020.08.17 9:00）前不会涉及到任何有关 APIO2020 题目、题解及相关算法的内容，必要内容将在以后进行补充。</p>
<p><strong>upd (2020.8.18 7:50)：隐藏内容已经公开。</strong></p>
<p><s>抱铃 awa</s></p>
<hr>
<h1 id="day-n">Day -n</h1>
<p>看到了 <a href="http://www.noi.cn/newsview.html?id=1287&amp;hash=08109C&amp;type=1">CCF 关于 APIO2020（中国区）的报名通知</a>，然后就报名了一下，成功通过审核，成为 B 类选手。</p>
<p>看到 <a href="https://apio2020.id/rules.html">Competition Rules</a> 中说是 IOI 赛制，但是 CCF 公告说是赛后统一评测，感到非常不爽。</p>
<p>好多同学都报名了 qwq。</p>
<h1 id="day-3-2-1">Day -3 / -2 / -1</h1>
<p>（具体时间忘了）收到学校的通知：APIO 去学校机房统一监考。</p>
<p><s>可以面基了（大喜。</s></p>
<h1 id="day-0">Day 0</h1>
<p>收到了 CCF 发的密码，结果试机锅了，账号密码第二天（比赛当天）才重发。算了，不练习就不练习吧，准备了五十几个模板，希望能用上。</p>
<p>期望：Cu。</p>
<h1 id="day-1比赛当天">Day 1（比赛当天）</h1>
<p>去机房和神仙同学面基惹 /kk。</p>
<p>用的自己电脑，连的学校机房无线网。顺便来你谷祭一下，求 rp++。</p>
<p>考试开始，下载毒瘤试卷，打开，发现 A 题好像是个二分图 / 网络流问题模板，还特别庆幸前一天刚写过一下 Dinic。主要是被题目中的“喜欢的颜色”以及每人最多粉刷一次误导，想成了建二分图后跑二分图匹配。再加上脑子突然瓦特了，就非常期待可以 AC，开始写正解。</p>
<p>写了好久，交了一发，发现 AC 了好多点，但是最后还是 TLE 了，才发现自己复杂度假了。但是我怎么可能轻易放弃呢？继续优化，花了好长时间，才意识到我的思路完全是错的，应该是一道 dp 题。</p>
<p>没办法，写 A 部分分，结果没啥思路，去看 B、C 题面。</p>
<p>C 交互题大毒瘤！然后就去做 B 了，没啥思路，时间好像也快到了，觉得 Subtask 2 可以玩♂一♂玩♂，写出来了，WA，调了好久一直都 WA，但是怎么都找不到错。题面读了好多遍，重构了几次代码，没有用。大概是我语文太差了理解错了吧。但是考场上特别紧张，其他的部分分好像一点思路没有，尤其是发现旁边同学开始玩 dino 了，心态彻底崩溃。</p>
<p>最后坚持到了考试结束，成功地爆零了 /dk，证明了我的菜。</p>
<ul>
<li>%%% @AC_Automation，NOIWC Cu，APIO 拿了 60~80 分</li>
<li>%%% @2x6_81，APIO 拿了 60~80 分</li>
<li>%%% @henrytb，NOIWC Cu，APIO 分数起码比我高（</li>
<li>%%% @wzm2007，故意放水和我分数一样（？</li>
</ul>
<h1 id="day-2考后总结">Day 2（考后总结）</h1>
<ul>
<li>NOIWC2020，贵到离谱，觉得自己太菜，没报。</li>
<li>APIO2020，报了，爆零。</li>
<li>NOI2020 线上同步赛，肯定爆零，没报。</li>
<li>NOIP2020，还有两个多月。</li>
</ul>
<p>这场比赛主要是太自信，以为可以写出 A 正解，结果思路错了，浪费好多时间，最后 B 无脑 Subtask 都没有拿下。<s>抱铃 awa</s></p>
<p>希望可以在 NOIP2020 制定好策略，拿下省一线+50 分。同时在以后的 APIO / NOIWC / BJOI 等大型比赛能够稳定发挥。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[题解 P4643@洛谷 【[国家集训队]阿狸和桃子的游戏】]]></title>
        <id>https://blog.ak-ioi.cf/post/solution-luogu-p4643/</id>
        <link href="https://blog.ak-ioi.cf/post/solution-luogu-p4643/">
        </link>
        <updated>2020-08-11T08:26:04.000Z</updated>
        <content type="html"><![CDATA[<p><strong>题意简述</strong></p>
<p>我们有一个 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span> 点 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span></span></span></span> 边的无向图，有点权和边权。现在两个人将它按照自己的最优方案每次取一个点，分为两部分，求出此时他们的分差。</p>
<hr>
<p><strong>方法分析</strong></p>
<p>边权不好处理，我们想到将它与点权合并。最容易想到的方法就是两个端点各加一半边权，这个方法也是正确的，正确性将在下方证明。</p>
<p>因为每个人都会按照自己的当前最优策略取，所以将整个权值排序后，编号为奇数的是一个人取的，偶数的是另一个人取的，我们只需要按照奇偶数分别算出总权值即可。</p>
<p><strong>正确性证明</strong></p>
<p>这里主要证明上面说的将边权与点权合并的正确性。</p>
<p>对于一条边 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>e</mi><mo>(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo separator="true">,</mo><mi>w</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">e(u,v,w)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">e</span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mclose">)</span></span></span></span>，设两端点的初始权值为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>a</mi><mi>u</mi></msub><mo separator="true">,</mo><msub><mi>a</mi><mi>v</mi></msub></mrow><annotation encoding="application/x-tex">a_u,a_v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">u</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，我们这里将两端点的权值改为了 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>a</mi><mi>u</mi></msub><mo>+</mo><mfrac><mi>w</mi><mn>2</mn></mfrac><mo separator="true">,</mo><msub><mi>a</mi><mi>v</mi></msub><mo>+</mo><mfrac><mi>w</mi><mn>2</mn></mfrac></mrow><annotation encoding="application/x-tex">a_u+\frac{w}{2},a_v+\frac{w}{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">u</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.040392em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.040392em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>。</p>
<p>情况一：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>u</mi><mo separator="true">,</mo><mi>v</mi></mrow><annotation encoding="application/x-tex">u,v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span></span></span></span> 被同一个人取到。</p>
<p>此时，这个人的总权值为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>a</mi><mi>u</mi></msub><mo>+</mo><msub><mi>a</mi><mi>v</mi></msub><mo>+</mo><mn>2</mn><mo>×</mo><mfrac><mi>w</mi><mn>2</mn></mfrac><mo>=</mo><msub><mi>a</mi><mi>u</mi></msub><mo>+</mo><msub><mi>a</mi><mi>v</mi></msub><mo>+</mo><mi>w</mi></mrow><annotation encoding="application/x-tex">a_u+a_v+2\times\frac{w}{2}=a_u+a_v+w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">u</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.040392em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">u</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span></span></span></span>，符合题意。</p>
<p>情况二：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>u</mi><mo separator="true">,</mo><mi>v</mi></mrow><annotation encoding="application/x-tex">u,v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span></span></span></span> 被两人分别取到。</p>
<p>不妨设 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>u</mi></mrow><annotation encoding="application/x-tex">u</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">u</span></span></span></span> 被第一个人取到。</p>
<p>此时，第一个人权值为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>a</mi><mi>u</mi></msub><mo>+</mo><mfrac><mi>w</mi><mn>2</mn></mfrac></mrow><annotation encoding="application/x-tex">a_u+\frac{w}{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">u</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.040392em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>，第二个人权值为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>a</mi><mi>v</mi></msub><mo>+</mo><mfrac><mi>w</mi><mn>2</mn></mfrac></mrow><annotation encoding="application/x-tex">a_v+\frac{w}{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.040392em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>。最后要将答案相减，得到 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>a</mi><mi>u</mi></msub><mo>−</mo><msub><mi>a</mi><mi>v</mi></msub></mrow><annotation encoding="application/x-tex">a_u-a_v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">u</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，符合题意。</p>
<p>综上所述，这种方法正确。</p>
<hr>
<p><strong>代码与备注</strong></p>
<p>在这份代码中，我们排序后按照从小到大顺序循环取值。由于题面保证 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span> 为偶数，因此这个方法也没有问题。</p>
<pre><code class="language-cpp">//By: Luogu@rui_er(122461)
#include &lt;bits/stdc++.h&gt;
using namespace std;
const int N = 1e4+5;

int n, m; 
double a[N], s[2];

int main() {
	scanf(&quot;%d%d&quot;, &amp;n, &amp;m);
	for(int i=1;i&lt;=n;i++) scanf(&quot;%lf&quot;, &amp;a[i]);
	for(int i=1;i&lt;=m;i++) {
		int u, v, w;
		scanf(&quot;%d%d%d&quot;, &amp;u, &amp;v, &amp;w);
		a[u] += w / 2.0;
		a[v] += w / 2.0; 
	}
	sort(a+1, a+1+n);
	for(int i=1;i&lt;=n;i++) s[i&amp;1] += a[i];
	printf(&quot;%.0lf\n&quot;, s[0]-s[1]);
	return 0;
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[题解 CF1167B@洛谷 | 1167B@Codeforces 【Lost Numbers】]]></title>
        <id>https://blog.ak-ioi.cf/post/solution-luogu-cf1167b-codeforces-1167b/</id>
        <link href="https://blog.ak-ioi.cf/post/solution-luogu-cf1167b-codeforces-1167b/">
        </link>
        <updated>2020-08-10T15:52:38.000Z</updated>
        <content type="html"><![CDATA[<p>我们有一个由 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>4</mn><mo separator="true">,</mo><mn>8</mn><mo separator="true">,</mo><mn>15</mn><mo separator="true">,</mo><mn>16</mn><mo separator="true">,</mo><mn>23</mn><mo separator="true">,</mo><mn>42</mn></mrow><annotation encoding="application/x-tex">4,8,15,16,23,42</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">4</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">8</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">5</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">6</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mord">3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">4</span><span class="mord">2</span></span></span></span> 组成的排列，只能询问四次两个位置上的数的乘积。</p>
<p>下面是一些可能会考虑到的<strong>错误的</strong>策略（也是我做题时的思路），在这里放出体现我们的思考过程：</p>
<p><strong>策略 1</strong>：每次询问两个相同的下标 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span> 和它本身。</p>
<p>这种策略是最容易想到的，但是这样的话只能询问出 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>4</mn></mrow><annotation encoding="application/x-tex">4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">4</span></span></span></span> 个位置的值，剩下两个位置就没办法了。考虑其它策略。</p>
<p><strong>策略 2</strong>：询问 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 与 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 的乘积，得到第一个数，此后三次询问 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>(</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo>)</mo><mo>(</mo><mn>2</mn><mo separator="true">,</mo><mn>3</mn><mo>)</mo><mo>(</mo><mn>3</mn><mo separator="true">,</mo><mn>4</mn><mo>)</mo></mrow><annotation encoding="application/x-tex">(1,2)(2,3)(3,4)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">3</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord">3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">4</span><span class="mclose">)</span></span></span></span>。</p>
<p>和策略 1 有着同样的问题。</p>
<hr>
<p><strong>正确策略</strong></p>
<p>通过上面的思考，我们得到了一个结论：<strong>只有 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>4</mn></mrow><annotation encoding="application/x-tex">4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">4</span></span></span></span> 个位置是显然不行的</strong>，考虑添加第五个位置。</p>
<p>我们可以询问 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>(</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo>)</mo><mo>(</mo><mn>2</mn><mo separator="true">,</mo><mn>3</mn><mo>)</mo><mo>(</mo><mn>3</mn><mo separator="true">,</mo><mn>4</mn><mo>)</mo><mo>(</mo><mn>4</mn><mo separator="true">,</mo><mn>5</mn><mo>)</mo></mrow><annotation encoding="application/x-tex">(1,2)(2,3)(3,4)(4,5)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">3</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord">3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">4</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord">4</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">5</span><span class="mclose">)</span></span></span></span>，这样就能方便的获得和五个位置相关的信息。</p>
<p><strong>具体解法</strong></p>
<p>在按照上面的策略询问完前五个数后得到了四个答案（代码中记做 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mi>u</mi><mi>t</mi><mi>i</mi><mi>p</mi><mi>l</mi><mi>e</mi></mrow><annotation encoding="application/x-tex">mutiple</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">u</span><span class="mord mathdefault">t</span><span class="mord mathdefault">i</span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">e</span></span></span></span>），我们枚举所有 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>6</mn><mo>!</mo><mo>=</mo><mn>720</mn></mrow><annotation encoding="application/x-tex">6!=720</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">6</span><span class="mclose">!</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">7</span><span class="mord">2</span><span class="mord">0</span></span></span></span> 种可能的排列情况，对于每个排列，循环一遍判断是否符合询问得到的答案即可。</p>
<p>但是这样还不够，我们还要知道<strong>满足四个答案的排列是唯一的</strong>。</p>
<p><strong>唯一性证明</strong></p>
<p>自己口胡的，可能不太严谨，但是自认为比较好理解，可以手玩几个理解一下。</p>
<p>因为上面数列任意两个数的乘积都不同，我们想到，满足 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub><mo>×</mo><msub><mi>a</mi><mi>j</mi></msub><mo>=</mo><mi>k</mi></mrow><annotation encoding="application/x-tex">a_i\times a_j=k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> 的只有两种可能，即 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span> 与 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span></span></span></span> 交换。而上面就相当于固定了前五个数，因为数列中的六个数给定，可以通过排除来获得第六个数的信息。</p>
<p>唯一性得证，策略正确。</p>
<hr>
<p>代码：</p>
<pre><code class="language-cpp">//By: Luogu@rui_er(122461)
#include &lt;bits/stdc++.h&gt;
using namespace std;

int a[7] = {-1, 4, 8, 15, 16, 23, 42}, multiple[5];

int main() {
	for(int i=1;i&lt;=4;i++) {
		printf(&quot;? %d %d\n&quot;, i, i+1);
		fflush(stdout);
		scanf(&quot;%d&quot;, &amp;multiple[i]);
	}
	do {
		bool _ = true;
		for(int i=1;i&lt;=4;i++) {
			if(a[i] * a[i+1] != multiple[i]) {
				_ = false;
				break;
			}
		}
		if(_) {
			printf(&quot;! &quot;);
			for(int i=1;i&lt;=6;i++) printf(&quot;%d &quot;, a[i]);
			puts(&quot;&quot;);
			break;
		}
	}while(next_permutation(a+1, a+7));
	return 0;
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[js 插件开发——从卡服到跑路（持续更新）]]></title>
        <id>https://blog.ak-ioi.cf/post/js-script/</id>
        <link href="https://blog.ak-ioi.cf/post/js-script/">
        </link>
        <updated>2020-08-06T02:45:53.000Z</updated>
        <summary type="html"><![CDATA[<p>标题纯属搞笑（不过我真的差一点把服务器卡了）。本文将简单介绍 js 插件开发的基础语法和模板。</p>
]]></summary>
        <content type="html"><![CDATA[<p>标题纯属搞笑（不过我真的差一点把服务器卡了）。本文将简单介绍 js 插件开发的基础语法和模板。</p>
<!-- more -->
<h1 id="js-基本语法">js 基本语法</h1>
<h2 id="变量定义">变量定义</h2>
<pre><code class="language-js">var a = 1; // 整数
var b = 0.33; // 浮点数
var c = &quot;string&quot;; // 字符串
var d = new RegExp(&quot;[0-9]&quot;); // 正则表达式
var e = /[0-9]/; // 正则表达式
var f = /\d/; // 正则表达式
var g = {&quot;name&quot;:&quot;Tom&quot;,&quot;id&quot;:&quot;1&quot;}; // json
var h = function() {alert(&quot;This is a function&quot;);}; // 函数，使用 h() 调用
</code></pre>
<p>从上面的例子可以看出，js 中的变量使用 var 声明，有很多用途。</p>
<h2 id="变量运算">变量运算</h2>
<p>下面的例子可以看出各类型变量的加法：</p>
<pre><code class="language-js">var a = 1;
var b = 0.33;
var c = &quot;QAQ&quot;;
var d = &quot;1&quot;;
a+b; // 1.33
a+c; // &quot;1QAQ&quot;
a+d; // &quot;11&quot;
b+c; // &quot;0.33QAQ&quot;
b+d; // &quot;0.331&quot;
c+d; // &quot;QAQ1&quot;
</code></pre>
<p>可以看出如果有字符串，则会将另一个变量转化为字符串；否则为整数/实数运算。</p>
<p>下面是整数运算的例子：</p>
<pre><code class="language-js">var a = 1;
var b = 2;
a+b; // 3
a-b; // -1
a*b; // 2
a/b; /* 0.5 */
a%b; // 1
</code></pre>
<p>可以看到，与其他一些语言不同，这里的除号为实数除法，并非整除。要想取整，可以参考如下代码：</p>
<pre><code class="language-js">var a = 5;
var b = 2;
/* 向下取整 */
var x = parseInt(a/b);
var y = Math.floor(a/b);
/* 向上取整 */
var z = Math.ceil(a/b);
/* 四舍五入 */
var w = Math.round(a/b);
</code></pre>
<h2 id="条件分支">条件分支</h2>
<p>js 的条件分支使用 if / else if / else，下面是一个例子：</p>
<pre><code class="language-js">var a = 2;
if(a &lt; 0) {
    console.log(&quot;Case 1. &quot;);
}
else if(a &lt; 1) {
    console.log(&quot;Case 2.&quot;);
}
else {
    console.log(&quot;Case 3&quot;);
}
</code></pre>
<h2 id="for-循环">for 循环</h2>
<p>js 的 for 循环有三个参数：</p>
<pre><code class="language-js">for(/*语句1*/;/*语句2*/;/*语句3*/)
</code></pre>
<p>语句 1 在开始前执行，语句 2 是运行循环代码块的条件，语句 3 在循环代码块运行后执行。</p>
<p>例子：</p>
<pre><code class="language-js">for(var i=0;i&lt;5;i++) {
    console.log(&quot;The number is &quot;+i);
}
</code></pre>
<p>结果：</p>
<pre><code class="language-plain">The number is 0
The number is 1
The number is 2
The number is 3
The number is 4
</code></pre>
<h2 id="for-in-循环">for-in 循环</h2>
<pre><code class="language-js">var a = {&quot;fname&quot;:&quot;Bill&quot;,&quot;lname&quot;:&quot;Gates&quot;};
var txt = &quot;&quot;;
for(var x in a) {
    txt = txt + a[x];
}
console.log(txt);
</code></pre>
<p>使用 for-in 循环来遍历 a 中的元素，结果：</p>
<pre><code class="language-plain">BillGates
</code></pre>
<h2 id="while-循环">while 循环</h2>
<pre><code class="language-js">while(/*条件*/) {
    /*执行的代码*/
}
</code></pre>
<p>例如：</p>
<pre><code class="language-js">var a = 5;
while(a &gt; 0) {
    console.log(a);
    a --;
}
</code></pre>
<h2 id="continue-break">continue-break</h2>
<p>break 语句将直接跳出循环，continue 将会结束这次循环，运行下一次循环。</p>
<h2 id="函数定义">函数定义</h2>
<pre><code class="language-js">function f() {
    console.log(&quot;calling function f()&quot;);
}
var g = function(x, y) {
    while(x&gt;0) {
        console.log(y);
    }
}
f();
g();
</code></pre>
<h2 id="自调用函数">自调用函数</h2>
<pre><code class="language-js">(function() {
    console.log(&quot;我可以调用自己&quot;);
})();
</code></pre>
<h1 id="常用输出">常用输出</h1>
<pre><code class="language-js">console.log(&quot;向控制台输出一行文字&quot;);
console.warn(&quot;向控制台输出一行警告&quot;);
console.error(&quot;想控制台输出一条错误&quot;);
alert(&quot;弹出窗口&quot;);
</code></pre>
<h1 id="写入-html-div">写入 html <div></h1>
<p>我们可以使用 document.getElementById() 来获取指定 id 的元素，不限于 div。</p>
<p>由于不方便展示效果，我们推荐一个<a href="http://www.jsons.cn/htmldebug/">网站</a>，将下面代码 copy 进去即可预览效果。</p>
<pre><code class="language-html">&lt;script&gt;
    function f() {
        document.getElementById(&quot;output&quot;).innerHTML = &quot;&lt;p&gt;替换文字&lt;/p&gt;&quot;;
    }
&lt;/script&gt;
&lt;div id=&quot;output&quot;&gt;&lt;/div&gt;
&lt;button onclick=&quot;f()&quot;&gt;替换&lt;/button&gt;
</code></pre>
<h1 id="从输入框获取输入内容">从输入框获取输入内容</h1>
<p>同样的，我们按照 id 获取。</p>
<pre><code class="language-html">&lt;script&gt;
    function submit() {
        document.getElementById(&quot;watch&quot;).innerHTML = &quot;&lt;p&gt;你的名字是：&quot;+document.getElementById(&quot;name&quot;).value+&quot;&lt;/p&gt;&quot;;
    }
&lt;/script&gt;
&lt;input id=&quot;name&quot; placeholder=&quot;你的名字&quot;&gt;&lt;/input&gt;
&lt;button onclick=&quot;submit()&quot;&gt;提交&lt;/button&gt;
&lt;p&gt;预览：&lt;/p&gt;
&lt;div id=&quot;watch&quot;&gt;&lt;/div&gt;
</code></pre>
<h1 id="浏览器本地存储变量">浏览器本地存储变量</h1>
<p>浏览器本地存储变量，刷新或关闭浏览器均可。</p>
<p>这里，我们使用 localStorage。需要注意的是，localStorage 默认以字符串形式存储，访问时注意强制类型转换。</p>
<p><strong>注意：大多数浏览器均支持，但仍有少输浏览器不支持，可以采取其他方法。</strong></p>
<pre><code class="language-html">&lt;script&gt;
    function submit() {
        localStorage.yourName = document.getElementById(&quot;name&quot;).value;
    }
    function watchSubmit() {
        document.getElementById(&quot;watch&quot;).innerHTML = &quot;&lt;p&gt;浏览器存储的名字是：&quot;+localStorage.yourName+&quot;&lt;/p&gt;&quot;;
    }
&lt;/script&gt;
&lt;input id=&quot;name&quot; placeholder=&quot;你的名字&quot;&gt;&lt;/input&gt;
&lt;button onclick=&quot;submit()&quot;&gt;提交&lt;/button&gt;
&lt;button onclick=&quot;watchSubmit()&quot;&gt;显示预览&lt;/button&gt;
&lt;p&gt;预览：（可以刷新网页或退出浏览器试试）&lt;/p&gt;
&lt;div id=&quot;watch&quot;&gt;&lt;/div&gt;
</code></pre>
<h1 id="设置延时处理">设置延时处理</h1>
<pre><code class="language-js">var a = setTimeout(function() {
    alert(&quot;时间到&quot;);
}, 5000);
</code></pre>
<p>意思是延时 5000 毫秒（5 秒）执行该函数。想要清除延时的进程，可以用</p>
<pre><code class="language-js">clearTimeout(a);
</code></pre>
<h1 id="设置每隔一段时间重复处理">设置每隔一段时间重复处理</h1>
<pre><code class="language-js">var a = setInterval(function() {
    console.log(&quot;时间到&quot;);
}, 5000);
</code></pre>
<p>每隔 5 秒处理一遍该函数。想要结束，可以用</p>
<pre><code class="language-js">clearInterval(a);
</code></pre>
<hr>
<h1 id="暂无更多更新">暂无更多更新</h1>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[浅谈机惨]]></title>
        <id>https://blog.ak-ioi.cf/post/jfca/</id>
        <link href="https://blog.ak-ioi.cf/post/jfca/">
        </link>
        <updated>2020-08-03T07:48:50.000Z</updated>
        <content type="html"><![CDATA[<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mstyle mathsize="2.488em"><mstyle mathcolor="red"><mtext>警告</mtext><mspace linebreak="newline"></mspace><mstyle mathsize="1.44em"><mtext>本文中的内容有一定危险性，请勿轻易尝试</mtext></mstyle></mstyle></mstyle></mrow><annotation encoding="application/x-tex">\Huge\color{red}\text{警告}\\\Large\text{本文中的内容有一定危险性，请勿轻易尝试}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.7001250399999999em;vertical-align:0em;"></span><span class="mord text sizing reset-size6 size11" style="color:red;"><span class="mord cjk_fallback" style="color:red;">警告</span></span></span><span class="mspace newline sizing reset-size6 size11" style="color:red;"></span><span class="base"><span class="strut" style="height:0.9839952em;vertical-align:0em;"></span><span class="mord text sizing reset-size6 size8" style="color:red;"><span class="mord cjk_fallback" style="color:red;">本文中的内容有一定危险性，请勿轻易尝试</span></span></span></span></span></span></p>
<p><s>要尝试也请用虚拟机</s></p>
<h1 id="前言-机惨是什么">前言 - 机惨是什么？</h1>
<p>机惨，即机房惨案，名词或动词（常作谓语或宾语），简称 jc 或 jfca，常见于 OI（信息学竞赛/算法竞赛）圈子。一位 OIer 在另一位 OIer 的电脑上做一些奇<s>♂</s>奇<s>♂</s>怪<s>♂</s>怪<s>♂</s>的坏事的情况被称为机惨。</p>
<p>顾名思义，机惨大多发生在机房，也有一些是通过特殊手段获取对方账号实施的。</p>
<h1 id="前言-2-为什么要写这篇文章">前言 2 - 为什么要写这篇文章？</h1>
<p>从人类诞生开始，就有人会干坏事。</p>
<p>从计算机被发明出来开始，就有人会用计算机干坏事。</p>
<p>写这篇文章的意义在于，如果有人机惨了你，你可以通过适当的方式机惨回去。（开始胡扯</p>
<p>请注意开玩笑一定要适度，否则导致对方在某平台的账号被封禁、或者辛辛苦苦写的代码丢失，你们大概就友尽了。</p>
<p><s>所以这也是个友尽的好方法。</s></p>
<h1 id="一般操作-跟对方开个玩笑不会造成损失">一般操作 - 跟对方开个玩笑，不会造成损失</h1>
<p>（除非你故意下狠手，这要另说）</p>
<h2 id="i-ak-ioi">I AK IOI!</h2>
<p>难度：Easy</p>
<p>相信各位 OIer 都知道这是什么了，但我还是要解释一遍。</p>
<p>I，即英文中的“我”。</p>
<p>AK，All Kill，在信息学竞赛圈一般指在比赛中获得满分。</p>
<p>IOI，International Olympiad in Informatics，国际信息学奥林匹克竞赛缩写。</p>
<p>I AK IOI，代表你在 IOI 比赛中取得了满分。</p>
<p>根据 OI 圈装弱的习俗，如果你说你很强，一般会有人膜拜你。（当然也会有大佬 D 你）</p>
<p>这样就可以达到机惨的目标。</p>
<p><strong>可行性分析</strong></p>
<p>前面说过，机惨大多发生在机房。在机房中，经常有人图省事在上厕所（或其他原因离开机房）时忘记锁定账号。在这一过程中，可以到他的电脑前，在未登出的平台实施。</p>
<p><strong>提示与警告</strong></p>
<p>这一方式一般发生在洛谷、vijos 等有社区功能的 Online Judge。</p>
<p>注意近期洛谷加强社区质量管控，发一次无意义帖子即可禁言。<s>不过依然可以在下方的“犇犇”发。</s></p>
<h2 id="is-it-rated">Is it rated?</h2>
<p>难度：Easy</p>
<p>在 Codeforces （一个以比赛为主的 oj）中，每一场比赛都会在主页放出公告。例如：<a href="https://codeforces.com/blog/entry/80682">https://codeforces.com/blog/entry/80682</a>。</p>
<p>在公告下（其实是全部博客文章下）的评论将会被 CFer 投票（vote），票数过低（一般为 -20）就会被浅写或隐藏，须手动点击才可查看。vote 值将会被计算为 contribution，在个人主页显示。</p>
<p>评论“Is it rated?”将会被广大 CFer down vote，甚至到 -50 / -100，将会大大影响你的 contribution。原因是一般的比赛公告中都会写出是否 rated，凭借经验也知道大多数都是 rated。</p>
<p>如果有人的 Codeforces 账号没有登出，也可以通过此方式实施机惨。</p>
<p><strong>可行性分析</strong></p>
<p>同上。</p>
<p><strong>提示与警告</strong></p>
<p>无。</p>
<h1 id="高级操作-可能造成损失请慎用">高级操作 - 可能造成损失，请慎用</h1>
<h2 id="github-机惨">GitHub 机惨</h2>
<p>难度：Easy / Medium</p>
<p>在 GitHub 中存储量大量的代码，很多人也会把博客搭建在 GitHub。如果你登入到其他人的 GitHub 账号，就可以获得对这些代码的管理权。陈他没有回来，你可以随意添、删、改代码。如果你知道他的密码，或者他勾选了记住密码选项，你可以将仓库在公有/私有之间切换，甚至永久删除仓库。</p>
<p><strong>可行性分析</strong></p>
<p>没啥好分析的。</p>
<p><strong>提示与警告</strong></p>
<p>如果是重要代码，建议你不要手贱。</p>
<h2 id="关机">关机</h2>
<p>难度：见具体类别</p>
<p>你可以趁他离开的时间把他的电脑关闭。具体方法在下面。</p>
<p><strong>可行性分析</strong></p>
<p>也没啥好分析的。</p>
<p><strong>提示与警告</strong></p>
<p>请在关机前看看有没有未保存的文件，如果文件因为你的手贱而丢失，后果我可保证不了。</p>
<h3 id="控制键强制关机">控制键强制关机</h3>
<p>难度：Easy</p>
<p>对于有 End 键的电脑，你可以按 Ctrl+Alt+End 来强制关机。这种方法可以瞬间关机，但是对硬盘损伤较大。</p>
<h3 id="控制键强制关机-2">控制键强制关机 2</h3>
<p>难度：Easy</p>
<p>某些电脑的 Fn+F1 也是关机的快捷键，操作方式同上。</p>
<h3 id="命令行关机">命令行关机</h3>
<p>难度：Easy</p>
<p>Win+R 输入 cmd，回车，写 <code>shutdown -s -t 0</code>。</p>
<h3 id="强制关机">强制关机</h3>
<p>难度：Easy</p>
<p><s>这么麻烦干啥，那么大一个电源键看不到吗？</s></p>
<p>直接按电源键。有些电脑可能要长按。</p>
<h3 id="远-程-关-机">远 程 关 机</h3>
<p>难度：Medium / Hard</p>
<p>偷偷溜到他的座位上，打开文件夹，右键此电脑，点属性，看到如下界面。</p>
<figure data-type="image" tabindex="1"><img src="https://s1.ax1x.com/2020/08/03/aandr4.png" alt="" loading="lazy"></figure>
<p>注意圈出的位置，特别是计算机全名。</p>
<p>这时你可以溜回自己的座位，输入 Win+R cmd，写 <code>shutdown -i</code>，会弹出一个窗口。这时不要关闭 cmd，否则那个窗口也会没。</p>
<p>在最上方“计算机”右侧，点击“添加”，输入上面记下来的<strong>计算机全名</strong>。下面的大家应该都能看懂，最下方注释是将会显示在对方计算机屏幕上的提示信息。选好后点确认，就可以愉快的看他懵*了。</p>
<h3 id="解决方案">解决方案</h3>
<p>为了防止你被别人用这些方式关机，在这里添加一条解决方案。</p>
<p>在关机前打开 cmd 输入 <code>shutdown -a</code>，就可以取消一切暂定的关机、重启任务。如果已经关机了，那就看你人品了。</p>
<h2 id="蓝屏">蓝屏</h2>
<p>难度：Medium</p>
<p>打开 cmd，输入 <code>taskkill -f -im csrss.exe</code>，就会蓝屏，大概是因为 windows 系统的文件被强制关闭了。</p>
<p>解决方法也很简单，重启就好了。</p>
<p><strong>可行性分析</strong></p>
<p>。</p>
<p><strong>提示与警告</strong></p>
<p>还是看一下有没有未保存的文件。</p>
<h1 id="神级操作-请勿模仿">神级操作 - 请勿模仿！！！</h1>
<h2 id="让系统爆炸">让系统爆炸</h2>
<p>难度：Hard</p>
<p>打开 cmd（或者建一个 bat 文件也可以，上面也是一样），输入 <code>%0|%0</code>，就能体验到内存瞬间占满，电脑直接卡炸的欢乐了。</p>
<p>千万不要模仿！！！效果可以看<a href="https://www.bilibili.com/video/av43405502/">这个视频</a>。</p>
<p><strong>可行性分析</strong></p>
<p>。</p>
<p><strong>提示与警告</strong></p>
<p>这个方法可能损害系统，一般情况千万不要用。</p>
<h1 id="恶搞方法-无危害">恶搞方法 - 无危害</h1>
<h2 id="图片全屏">图片全屏</h2>
<p>难度：Medium</p>
<p>在桌面截屏，截全（包括任务栏），打开浏览器将图片全屏显示，然后坐等他一脸懵*即可。</p>
<p>退出方法：F11 或 Fn+F11，如果没有用，将鼠标移动到屏幕上方，出现一个黑色的叉。</p>
<p>无危害就不警告了吧。也懒得分析啥了。</p>
<h2 id="桌面设置">桌面设置</h2>
<p>难度：Medium / Hard</p>
<p>打开浏览器，进入游戏界面（越花越好，后面解释原因），全屏截图（包括任务栏、浏览器的一些标识、网址栏等），退出，在设置中将这张图片设置为桌面背景，然后清除所有桌面图标（具体方法可以百度，这里就不详细讲了），他回来后肯定会一脸懵，怎么按叉号都退不出去。</p>
<p>如果你是学生党，还可以触发额外效果：老师走了过来，以为他在玩游戏，就会把他骂一顿。</p>
<p>懒得分析了，<strong>警告：</strong> 请格外注意，防止友尽。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[C++ 类的继承基础]]></title>
        <id>https://blog.ak-ioi.cf/post/c-lei-de-ji-cheng-ji-chu/</id>
        <link href="https://blog.ak-ioi.cf/post/c-lei-de-ji-cheng-ji-chu/">
        </link>
        <updated>2020-07-28T02:56:53.000Z</updated>
        <summary type="html"><![CDATA[<p>类是 C++ 的一大特色，但是只知道类却不会类的继承是没有太大意义的。今天，我们就来聊一下类的继承。</p>
]]></summary>
        <content type="html"><![CDATA[<p>类是 C++ 的一大特色，但是只知道类却不会类的继承是没有太大意义的。今天，我们就来聊一下类的继承。</p>
<!-- more -->
<p>类，即 class，与结构体 struct 类似，同时也添加了一些新的功能。</p>
<p>类中的元素分 public、protected 和 private 三种，在继承时有所体现：</p>
<table>
<thead>
<tr>
<th style="text-align:center">继承类型</th>
<th style="text-align:center">基类 public 元素在 派生类的类别</th>
<th style="text-align:center">基类 protected 元素在 派生类的类别</th>
<th style="text-align:center">基类 private 元素在 派生类的类别</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">public 继承</td>
<td style="text-align:center">public</td>
<td style="text-align:center">protected</td>
<td style="text-align:center">不继承</td>
</tr>
<tr>
<td style="text-align:center">protected 继承</td>
<td style="text-align:center">protected</td>
<td style="text-align:center">protected</td>
<td style="text-align:center">不继承</td>
</tr>
<tr>
<td style="text-align:center">private 继承</td>
<td style="text-align:center">private</td>
<td style="text-align:center">private</td>
<td style="text-align:center">不继承</td>
</tr>
</tbody>
</table>
<p>注意继承的种类改变不了以下几点：</p>
<ul>
<li>private 成员只能在类内及友元中被访问，无法被派生类访问；</li>
<li>protected 成员可以在派生类访问。</li>
</ul>
<p>下面看一个具体的例子：</p>
<pre><code class="language-cpp">//By: Luogu@rui_er(122461)
#include &lt;bits/stdc++.h&gt;
using namespace std;

class A { // 定义基类 A 
public:
	int a;
	A() {
		a = 1;
		b = 2;
		c = 3;
		d = 4;
	}
	void print() {
		cout&lt;&lt;a&lt;&lt;endl; // 正确，类中成员 
		cout&lt;&lt;b&lt;&lt;endl; // 正确，类中成员 
		cout&lt;&lt;c&lt;&lt;endl; // 正确，类中成员 
		cout&lt;&lt;d&lt;&lt;endl; // 正确，类中成员 
	}
public:
	int b;
protected:
	int c;
private:
	int d;
}; 
class B : public A { // 从 A 通过 public 继承得到派生类 B 
public:
	int a;
	B(int x) {
		A();
		a = x;
	}
	void print() {
		cout&lt;&lt;a&lt;&lt;endl; // 正确，类中成员 
		cout&lt;&lt;b&lt;&lt;endl; // 正确，在基类中是 public 成员，在派生类依然是 public 成员 
		cout&lt;&lt;c&lt;&lt;endl; // 正确，在基类中是 protected 成员，在派生类依然是 protected 成员 
		cout&lt;&lt;d&lt;&lt;endl; // 错误，基类的 private 成员不能被继承 
	}
};

int main() {
	B b(5);
	cout&lt;&lt;b.a&lt;&lt;endl; // 正确，类中 public 成员 
	cout&lt;&lt;b.b&lt;&lt;endl; // 正确，继承为 public 成员 
	cout&lt;&lt;b.c&lt;&lt;endl; // 错误，继承为 protected 成员，不能在类外访问 
	cout&lt;&lt;b.d&lt;&lt;endl; // 错误 
	return 0;
}
</code></pre>
<p>这里是 public 继承，另外两种继承可以以此类推。</p>
<hr>
<p><strong>虚拟继承</strong></p>
<p>在类 A 中的函数 f() 继承到 B 中需要重写，怎么办？</p>
<p>! 如果只是想根据基类函数加一些代码：</p>
<pre><code class="language-cpp">class A {
public:
    void f() {
        puts(&quot;A&quot;);
    }
};
class B : public A {
public:
    void f() {
        A::f(); // 调用基类的 f() 函数
        puts(&quot;B&quot;); // 需要额外添加的代码
    }
};
</code></pre>
<p>这里基类指针可以指向派生类的对象：</p>
<pre><code class="language-cpp">class A {
public:
    int a;
};
class B : public A {
public:
    int b;
};
int main() {
    B b;
    b.a = 1;
    b.b = 2;
    A* p = &amp;b;
    printf(&quot;%d\n&quot;, p-&gt;a);
    return 0;
}
</code></pre>
<p>! 问题</p>
<pre><code class="language-cpp">class A {
public:
    void f() {
        puts(&quot;A&quot;);
    }
};
class B : public A {
public:
    void f() {
        puts(&quot;B&quot;);
    }
};
int main() {
    B b;
    A* p = &amp;b;
    p-&gt;f(); // 这一行
}
</code></pre>
<p>程序中的 p-&gt;f() 到底指哪一个？</p>
<p>! 继承时重写函数</p>
<p>如果一个函数需要被重写，在基类中应声明为 virtual，此时将调用子类的函数。</p>
<pre><code class="language-cpp">class A {
public:
    virtual void f() {
        puts(&quot;A&quot;);
    }
};
class B : public A {
public:
    void f() {
        puts(&quot;B&quot;);
    }
};
int main() {
    B b;
    A* p = &amp;b;
    p-&gt;f(); // 这一行
}
</code></pre>
<hr>
<p><strong>继承中的构造、析构函数问题</strong></p>
<pre><code class="language-cpp">class A {
public:
    A() : a(0), b(0) {
        puts(&quot;A()&quot;);
    }
    A(int x, int y) : a(x), b(y) {
        puts(&quot;A(x, y)&quot;);
    }
    ~A() {
        puts(&quot;~A()&quot;);
    }
private:
    int a, b;
};
class B : public A {
public:
    B() : A(0, 1) {
        puts(&quot;B()&quot;);
    }
    ~B() {
        puts(&quot;~B()&quot;);
    }
};
int main() {
    A* p = new B();
    delete p;
}
</code></pre>
<p>在这个程序中，delete p 可能导致程序出错甚至崩溃，这里需要将 ~A() 声明为 virtual：</p>
<pre><code class="language-cpp">virtual ~A()
</code></pre>
<hr>
<p><strong>多重继承</strong></p>
<pre><code class="language-cpp">class father {/*Do somthing..*/};
class mother {/*Do something..*/};
class son : public father, public mother {/*Do somthing..*/};
</code></pre>
<p>注意这里如果 father 和 mother 中出现同名变量可能导致错误。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[浅谈 C++ 不定参数]]></title>
        <id>https://blog.ak-ioi.cf/post/c-han-shu-bu-ding-can-shu-xiang-jie/</id>
        <link href="https://blog.ak-ioi.cf/post/c-han-shu-bu-ding-can-shu-xiang-jie/">
        </link>
        <updated>2020-07-27T12:41:29.000Z</updated>
        <summary type="html"><![CDATA[<p>你是否遇到过一个函数要传的参数不确定的问题？你是否想要写一个方便的函数可以处理任意多个数的最小值（最大值、加和），而不是套很多层的 min（max、+）？C++ 函数不定参数可以实现这些。</p>
]]></summary>
        <content type="html"><![CDATA[<p>你是否遇到过一个函数要传的参数不确定的问题？你是否想要写一个方便的函数可以处理任意多个数的最小值（最大值、加和），而不是套很多层的 min（max、+）？C++ 函数不定参数可以实现这些。</p>
<!-- more -->
<p>先来说说多个数最小值的函数。</p>
<p>我们首先声明一个函数：</p>
<pre><code class="language-cpp">int Min(int tot, ...);
</code></pre>
<p>这里 tot 表示要求最小值的数的个数，后面的 ... 是数的列表。</p>
<p>我们需要调用后面的列表，在函数中定义 va_list，长度为 tot：</p>
<pre><code class="language-cpp">int Min(int tot, ...) {
    va_list a;
    va_start(a, tot);
    // Do something..
}
</code></pre>
<p>然后开始写比较，每次从列表中取一个 int 元素，与当前最小值比较（这里最小值设置为 0x3f3f3f3f），取元素时使用 va_arg()，最后结束列表即可。</p>
<pre><code class="language-cpp">int Min(int tot, ...) {
	va_list a;
	va_start(a, tot);
	int res = 0x3f3f3f3f;
	for(int i=1;i&lt;=tot;i++) {
		res = min(res, va_arg(a, int));
	}
	va_end(a);
	return res;
}
</code></pre>
<p>我们试着调用 Min(4, -1, 3, 2, 0)，发现返回值为 -1，即 -1, 3, 2, 0 这四个数中的最小值。</p>
<hr>
<p>以上是 C++98 支持的最基本的不定参数用法，下面讲解一个 C++11 新增的技巧——可变参数模板。</p>
<p>C++11 允许我们这样定义一个可变参数类模板：</p>
<pre><code class="language-cpp">template&lt;typename ... Types&gt;
class QAQ {
    // Do something..
};
</code></pre>
<p>这样我们就可以用任意数量的变量类型来初始化 QAQ：</p>
<pre><code class="language-cpp">QAQ&lt;&gt; c1;
QAQ&lt;int&gt; c2;
QAQ&lt;int, char&gt; c3;
</code></pre>
<p>如果想要避免出现使用 0 个模板参数来初始化的情况，我们可以这么写：</p>
<pre><code class="language-cpp">template&lt;typename T, typename ... Types&gt;
class QAQ2 {
    // Do something..
};
</code></pre>
<p>可变参数函数模板如下（这里是一个输出不同类型的变量的函数）：</p>
<pre><code class="language-cpp">void print() { // 这个函数啥都不用做，只是为了防止递归到最后一层后出现的函数未定义的现象，可以自行探索
    ;
}
template&lt;typename T, typename ... Types&gt;
void print(T arg, Types ... args) {
    cout&lt;&lt;arg&lt;&lt;endl;
    print(args ...);
}
</code></pre>
<p>这样我们就可以输出一串任意长度、任意类型的列表了：</p>
<pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;
using namespace std;

void print() {
    ;
}
template&lt;typename T, typename ... Types&gt;
void print(T arg, Types ... args) {
    cout&lt;&lt;arg&lt;&lt;endl;
    print(args ...);
}

int main() {
    int a = 0;
    print(1, 2, 0.18, &quot;QAQ&quot;, a, &amp;a);
    return 0;
}
</code></pre>
<p>输出结果：</p>
<pre><code class="language-plain">1
2
0.18
QAQ
0
0x73fe1c
</code></pre>
<p>（注：最后一个输出的是变量 a 的地址，可能因人而异）</p>
<p>以上就是不定参数的基本用法，大家学会了吗？可以自己写写试试哟~</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[插头dp——从入门到跳楼]]></title>
        <id>https://blog.ak-ioi.cf/post/cha-tou-dp-cong-ru-men-dao-tiao-lou/</id>
        <link href="https://blog.ak-ioi.cf/post/cha-tou-dp-cong-ru-men-dao-tiao-lou/">
        </link>
        <updated>2020-07-21T04:50:12.000Z</updated>
        <content type="html"><![CDATA[<h1 id="前置知识">前置知识</h1>
<ul>
<li>动态规划</li>
<li>括号表示法（或最小表示法）</li>
<li>状态压缩</li>
<li>哈希表</li>
</ul>
<h1 id="一些定义">一些定义</h1>
<p>先看模板题：<a href="https://www.luogu.com.cn/problem/P5056">P5056@洛谷</a> - 【模板】插头dp</p>
<p>插头 dp 主要用于解决网格图上的哈密顿回路相关的问题。</p>
<h2 id="插头">插头</h2>
<p>插头就是网格图上一个格子与另一个格子相连的位置，如图。</p>
<figure data-type="image" tabindex="1"><img src="https://s1.ax1x.com/2020/07/21/UINaCj.png" alt="" loading="lazy"></figure>
<h2 id="轮廓线">轮廓线</h2>
<p>在我们指定一个当前格子时，他的下侧和右侧连接到边界的线成为轮廓线。</p>
<p>如图，蓝色格子为当前格子，红色线为轮廓线。</p>
<figure data-type="image" tabindex="2"><img src="https://s1.ax1x.com/2020/07/21/UINw2n.png" alt="" loading="lazy"></figure>
<h1 id="毒瘤动规-插头-dp">毒瘤动规 - 插头 dp</h1>
<h2 id="设计状态">设计状态</h2>
<p>插头 dp 中状态为一条轮廓线，每次状态转移转移一个格子，轮廓线转移如图：</p>
<figure data-type="image" tabindex="3"><img src="https://s1.ax1x.com/2020/07/21/UINXRA.png" alt="" loading="lazy"></figure>
<h2 id="状态压缩">状态压缩</h2>
<p>由于数据量太大，这里需要使用状态压缩。</p>
<p>我们知道，为了形成回路，在任意时刻插头均不会相交。（红色为插头，绿色为轮廓线）</p>
<figure data-type="image" tabindex="4"><img src="https://s1.ax1x.com/2020/07/21/UIU7yq.png" alt="" loading="lazy"></figure>
<p>于是想到括号串。这里我们用 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>(</mo></mrow><annotation encoding="application/x-tex">(</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span></span></span></span>、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>)</mo></mrow><annotation encoding="application/x-tex">)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mclose">)</span></span></span></span>、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">#</mi></mrow><annotation encoding="application/x-tex">\#</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">#</span></span></span></span> 来表示轮廓线为在左侧的插头、在右侧的插头或没有插头。</p>
<p>因为需要状态压缩，我们考虑使用括号表示法（最小表示法也可以，但在本文中不会涉及）。在这里我们将 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">0,1,2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span></span></span></span> 分别表示空插头、左侧插头和右侧插头。</p>
<h2 id="状态转移">状态转移</h2>
<p>状态转移有如下几种情况：</p>
<h3 id="当前格为障碍">当前格为障碍</h3>
<p>若当前格为障碍，直接转移即可。</p>
<h3 id="当前格既没有上插头又没有左插头">当前格既没有上插头又没有左插头</h3>
<p>此时为了满足经过所有格子，添加右侧和下侧的插头，即在括号串中将一对 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>00</mn></mrow><annotation encoding="application/x-tex">00</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord">0</span></span></span></span> 替换为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>12</mn></mrow><annotation encoding="application/x-tex">12</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">2</span></span></span></span>。</p>
<h3 id="当前格有上插头">当前格有上插头</h3>
<p>则有两种转移方式——直走延长插头或转弯。</p>
<h3 id="当前格有左插头">当前格有左插头</h3>
<p>同理。</p>
<h3 id="当前格既有上插头又有左插头">当前格既有上插头又有左插头</h3>
<h4 id="均为-1-或均为-2">均为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 或均为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>2</mn></mrow><annotation encoding="application/x-tex">2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span></h4>
<p>此时将两个 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>（<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>2</mn></mrow><annotation encoding="application/x-tex">2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span>）合并变为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>0</mn></mrow><annotation encoding="application/x-tex">0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>，并向右侧（左侧）找到第一个右插头（左插头）变为左插头（右插头）。</p>
<h4 id="左插头为-2-上插头为-1">左插头为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>2</mn></mrow><annotation encoding="application/x-tex">2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span>、上插头为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></h4>
<p>此时直接连起来即可。</p>
<h4 id="左插头为-1-上插头为-2">左插头为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>、上插头为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>2</mn></mrow><annotation encoding="application/x-tex">2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span></h4>
<p>此时将要形成闭合回路。判断当前格是否为最后一格，是则连接并更新答案，否则状态不合法。</p>
<h2 id="其他细节">其他细节</h2>
<p>我们建立滚动哈希表方便压缩空间，同时 dp 只记录哈希位置的值。因为是哈希表，因此在每一行开始的时候都需要 <code>modifyQue()</code> 来滚动、更换值。</p>
<h2 id="完整代码">完整代码</h2>
<p>您大可先看看我 23 次才 AC 的<a href="https://www.luogu.com.cn/record/list?pid=P5056&amp;user=122461&amp;page=1">提交记录</a>。</p>
<pre><code class="language-cpp">//By: Luogu@rui_er(122461)
#include &lt;bits/stdc++.h&gt;
#define fil(a,b) memset((a),(b),sizeof(a))
#define in inline
using namespace std;
typedef long long ll;
const ll N = 12+5, X = 3e5+5, K = 1&lt;&lt;25|5, mod = 299987;
ll n, m, dx, dy, bit, lst, ans;
ll a[N][N], p[N], h[X], nxt[K], que[2][K], val[2][K], cnt[2];
in void add(ll hash, ll status, ll tot) {
	nxt[++cnt[bit]] = h[hash];
	h[hash] = cnt[bit];
	que[bit][cnt[bit]] = status;
	val[bit][cnt[bit]] = tot;
}
in void insert(ll status, ll tot) {
	int hash = status % mod + 1;
	for(ll i=h[hash];i;i=nxt[i]) {
		if(que[bit][i] == status) {
			val[bit][i] += tot;
			return;
		}
	}
	add(hash, status, tot);
}
in void modifyQue() {
	for(ll i=1;i&lt;=cnt[bit];i++) {
		que[bit][i] &lt;&lt;= 2;
	}
}
in void dp() {
	cnt[bit] = 1;
	val[bit][1] = 1;
	que[bit][1] = 0;
	for(ll i=1;i&lt;=n;i++) {
		modifyQue();
		for(ll j=1;j&lt;=m;j++) {
			fil(h, 0);
			lst = bit;
			bit ^= 1;
			cnt[bit] = 0;
			for(ll k=1;k&lt;=cnt[lst];k++) {
				ll status = que[lst][k];
				ll tot = val[lst][k];
				ll P1 = (status &gt;&gt; ((j - 1) * 2)) % 4;
				ll P2 = (status &gt;&gt; (j * 2)) % 4;
				if(!a[i][j]) {
					if(!P1 &amp;&amp; !P2) {
						insert(status, tot);
					}
				}
				else if(!P1 &amp;&amp; !P2) {
					if(a[i][j+1] &amp;&amp; a[i+1][j]) {
						ll nxtStatus = status + p[j-1] + 2 * p[j];
						insert(nxtStatus, tot);
					}
				}
				else if(!P1 &amp;&amp; P2) {
					if(a[i][j+1]) {
						insert(status, tot);
					}
					if(a[i+1][j]) {
						ll nxtStatus = status - p[j] * P2 + p[j-1] * P2;
						insert(nxtStatus, tot);
					}
				}
				else if(P1 &amp;&amp; !P2) {
					if(a[i+1][j]) {
						insert(status, tot);
					}
					if(a[i][j+1]) {
						ll nxtStatus = status - p[j-1] * P1 + p[j] * P1;
						insert(nxtStatus, tot);
					}
				}
				else if(P1 == 1 &amp;&amp; P2 == 1) {
					ll tmp = 1;
					for(ll l=j+1;l&lt;=m;l++) {
						ll Pid = (status &gt;&gt; (l * 2)) % 4;
						if(Pid == 1) {
							++tmp;
						}
						else if(Pid == 2) {
							--tmp;
						}
						if(!tmp) {
							ll nxtStatus = status - p[j] - p[j-1] - p[l];
							insert(nxtStatus, tot);
							break;
						}
					}
				}
				else if(P1 == 2 &amp;&amp; P2 == 2) {
					ll tmp = 1;
					for(ll l=j-2;l&gt;=0;l--) {
						ll Pid = (status &gt;&gt; (l &lt;&lt; 1)) % 4;
						if(Pid == 1) {
							--tmp;
						}
						else if(Pid == 2) {
							++tmp;
						}
						if(!tmp) {
							ll nxtStatus = status - 2 * p[j] - 2 * p[j-1] + p[l];
							insert(nxtStatus, tot);
							break;
						}
					}
				}
				else if(P1 == 2 &amp;&amp; P2 == 1) {
					ll nxtStatus = status - 2 * p[j-1] - p[j];
					insert(nxtStatus, tot);
				}
				else if(i == dx &amp;&amp; j == dy) {
					ans += tot;
				}
			}
		}
	}
}

int main() {
	scanf(&quot;%lld%lld&quot;, &amp;n, &amp;m);
	for(ll i=1;i&lt;=n;i++) {
		string s;
		cin&gt;&gt;s;
		s = ' ' + s;
		for(ll j=1;j&lt;=m;j++) {
			if(s[j] == '.') {
				a[i][j] = 1;
				dx = i;
				dy = j;
			}
		}
	}
	p[0] = 1;
	for(ll i=1;i&lt;=12;i++) {
		p[i] = p[i-1] &lt;&lt; 2;
	}
	dp();
	printf(&quot;%lld\n&quot;, ans);
	return 0;
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[陈丹琪分治学习笔记]]></title>
        <id>https://blog.ak-ioi.cf/post/learning-cdq/</id>
        <link href="https://blog.ak-ioi.cf/post/learning-cdq/">
        </link>
        <updated>2020-07-21T01:25:31.000Z</updated>
        <content type="html"><![CDATA[<p>先来看一道模板题：<a href="https://www.luogu.com.cn/problem/P3810">P3810@洛谷</a> - 【模板】三维偏序（陌上花开）。</p>
<p>考虑 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><msup><mi>n</mi><mn>2</mn></msup><mo>)</mo></mrow><annotation encoding="application/x-tex">O(n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 暴力枚举，但是数据范围大到离谱，因此这种方法显然行不通。</p>
<p>下面就来讲解陈丹琪分治算法，主要用于解决 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span> 维偏序问题。</p>
<h1 id="前置知识">前置知识</h1>
<h2 id="前置知识-2">前置知识</h2>
<ul>
<li>树状数组</li>
<li>函数递归 / 分治</li>
<li>归并排序</li>
</ul>
<h2 id="偏序问题简述">偏序问题简述</h2>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span> 维偏序，即有 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> 个元素，每个元素有 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span> 个属性 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>a</mi><mrow><mi>i</mi><mo separator="true">,</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>a</mi><mrow><mi>i</mi><mo separator="true">,</mo><mn>2</mn></mrow></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>a</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>n</mi></mrow></msub></mrow><annotation encoding="application/x-tex">a_{i,1},a_{i,2},\cdots,a_{i,n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>，求对于 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi><mo>∈</mo><mo>[</mo><mn>1</mn><mo separator="true">,</mo><mi>k</mi><mo>]</mo></mrow><annotation encoding="application/x-tex">i\in[1,k]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69862em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">]</span></span></span></span>，使 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>a</mi><mrow><mi>j</mi><mo separator="true">,</mo><mn>1</mn></mrow></msub><mo>≤</mo><msub><mi>a</mi><mrow><mi>i</mi><mo separator="true">,</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>a</mi><mrow><mi>j</mi><mo separator="true">,</mo><mn>2</mn></mrow></msub><mo>≤</mo><msub><mi>a</mi><mrow><mi>i</mi><mo separator="true">,</mo><mn>2</mn></mrow></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>a</mi><mrow><mi>j</mi><mo separator="true">,</mo><mi>n</mi></mrow></msub><mo>≤</mo><msub><mi>a</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>n</mi></mrow></msub></mrow><annotation encoding="application/x-tex">a_{j,1}\le a_{i,1}, a_{j,2}\le a_{i,2}, \cdots, a_{j,n}\le a_{i,n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.922078em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mpunct mtight">,</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.922078em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mpunct mtight">,</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.922078em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 且 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>j</mi><mi mathvariant="normal">≠</mi><mi>i</mi></mrow><annotation encoding="application/x-tex">j\ne i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel"><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span> 的元素个数。</p>
<h2 id="一维偏序问题">一维偏序问题</h2>
<p>一维偏序，即给定 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span> 个整数，求对于数 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">a_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，满足 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>a</mi><mi>j</mi></msub><mo>≤</mo><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">a_j\le a_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.922078em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 且 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>j</mi><mi mathvariant="normal">≠</mi><mi>i</mi></mrow><annotation encoding="application/x-tex">j\ne i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel"><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span> 的整数个数。</p>
<p>可以考虑排序，复杂度 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><mi>n</mi><mi>log</mi><mo>⁡</mo><mi>n</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">O(n\log n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>。</p>
<p>模板题：<a href="https://www.luogu.com.cn/problem/P1177">P1177@洛谷</a> - 【模板】快速排序。</p>
<h2 id="二维偏序问题">二维偏序问题</h2>
<p>二维偏序，在平面内有 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span> 个点，对于 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span>，求 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>j</mi><mi mathvariant="normal">≠</mi><mi>i</mi><mo separator="true">,</mo><msub><mi>x</mi><mi>j</mi></msub><mo>≤</mo><msub><mi>x</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>y</mi><mi>j</mi></msub><mo>≤</mo><msub><mi>y</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">j\ne i,x_j\le x_i,y_j\le y_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel"><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9456279999999999em;vertical-align:-0.286108em;"></span><span class="mord mathdefault">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.922078em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，此类问题可以考虑树状数组，复杂度 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><mi>n</mi><mi>log</mi><mo>⁡</mo><mi>n</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">O(n\log n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>。</p>
<p>模板题：<a href="http://acm.hdu.edu.cn/showproblem.php?pid=1541">HDU1541@杭电</a> - Stars（由于很久以前做的忘记洛谷上那道题的题号了，只能从别人的博客找了外 OJ 的一道题。）</p>
<p>代码：懒得写了，引自<a href="https://www.luogu.com.cn/blog/Owencodeisking/post-xue-xi-bi-ji-cdq-fen-zhi-hu-zheng-ti-er-fen">[学习笔记]CDQ分治和整体二分</a></p>
<pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;
#define lowbit(x) ((x)&amp;(-(x)))
using namespace std;
const int maxn=100000+10;
int n,c[maxn],ans[maxn];

struct Stars{
    int x,y;
}a[maxn];

bool cmp(Stars a,Stars b){
    if(a.x!=b.x) return a.x&lt;b.x;
    return a.y&lt;b.y;
}

inline int read(){
    register int x=0,f=1;char ch=getchar();
    while(!isdigit(ch)){if(ch=='-')f=-1;ch=getchar();}
    while(isdigit(ch)){x=(x&lt;&lt;3)+(x&lt;&lt;1)+ch-'0';ch=getchar();}
    return (f==1)?x:-x;
}
void add(int x,int y){
    for(;x&lt;maxn;x+=lowbit(x)) c[x]+=y; 
}
int sum(int x){
    int ans=0;
    for(;x;x-=lowbit(x)) ans+=c[x];
    return ans;
}

int main()
{
    n=read();
    for(int i=1;i&lt;=n;i++) 
        a[i].x=read(),a[i].y=read();
    sort(a+1,a+n+1,cmp);
    int now;
    for(int i=1;i&lt;=n;i++){
        now=sum(a[i].y+1);
        ans[now]++;
        add(a[i].y+1,1);
    }
    for(int i=0;i&lt;n;i++) 
        printf(&quot;%d\n&quot;,ans[i]);
    return 0;
}
</code></pre>
<h1 id="陈丹琪分治-三维偏序问题">陈丹琪分治 - 三维偏序问题</h1>
<p>简单来讲就只是在上面的二维偏序上面增加一个维度。</p>
<p>我们考虑按第一个属性排序，第二个属性使用归并排序，第三个属性使用树状数组。</p>
<p>归并排序时因为第一个属性有序，因此排序第二个属性时可以随意打乱，因为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>a</mi><mrow><mi>j</mi><mo>∈</mo><mo>[</mo><mi>m</mi><mi>i</mi><mi>d</mi><mo>+</mo><mn>1</mn><mo separator="true">,</mo><mi>r</mi><mo>]</mo></mrow></msub><mo>≥</mo><msub><mi>a</mi><mrow><mi>i</mi><mo>∈</mo><mo>[</mo><mi>l</mi><mo separator="true">,</mo><mi>m</mi><mi>i</mi><mi>d</mi><mo>]</mo></mrow></msub></mrow><annotation encoding="application/x-tex">a_{j\in[mid+1,r]}\ge a_{i\in[l,mid]}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9911699999999999em;vertical-align:-0.3551999999999999em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">∈</span><span class="mopen mtight">[</span><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">d</span><span class="mbin mtight">+</span><span class="mord mtight">1</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mclose mtight">]</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7857599999999999em;vertical-align:-0.3551999999999999em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">∈</span><span class="mopen mtight">[</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">d</span><span class="mclose mtight">]</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span></span></span></span>。因为此时两个属性均有序，第三维就可以使用树状数组求解了，复杂度 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><mi>n</mi><msup><mi>log</mi><mo>⁡</mo><mn>2</mn></msup><mi>n</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">O(n\log^2 n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.148448em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8984479999999999em;"><span style="top:-3.1473400000000002em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>。</p>
<p>模板题：<a href="https://www.luogu.com.cn/problem/P3810">P3810@洛谷</a> - 【模板】三维偏序（陌上花开）</p>
<p>以下是我的 AC 代码：（当时写的，码风可能不太好）</p>
<pre><code class="language-cpp">//By: Luogu@rui_er(122461)
#include &lt;bits/stdc++.h&gt;
using namespace std;
const int MAXN = 1e5+5;

int n, m;
int ans[MAXN];
struct Node
{
	int a, b, c;
	int w, f;
	bool operator &lt; (const Node &amp;p) const
	{
		if(a != p.a) return a &lt; p.a;
		if(b != p.b) return b &lt; p.b;
		return c &lt; p.c;
	}
}e[MAXN], tmp[MAXN];

namespace BIT
{
	int index[MAXN&lt;&lt;1];
	int lowbit(int x) {return x&amp;(-x);}
	void upd(int x, int y) {for(;x&lt;=m;x+=lowbit(x)) index[x] += y;}
	int sum(int x) {int ans = 0; for(;x;x-=lowbit(x)) ans += index[x]; return ans;}
}
namespace cdq
{
	void mergesort(int l, int mid, int r)
	{
		int x = l, y = mid + 1, tot = l;
		while(x &lt;= mid &amp;&amp; y &lt;= r)
		{
			if(e[x].b &lt;= e[y].b) BIT::upd(e[x].c, e[x].w), tmp[tot++] = e[x++];
			else e[y].f += BIT::sum(e[y].c), tmp[tot++] = e[y++];
		}
		while(x &lt;= mid) BIT::upd(e[x].c, e[x].w), tmp[tot++] = e[x++];
		while(y &lt;= r) e[y].f += BIT::sum(e[y].c), tmp[tot++] = e[y++];
		for(int i=l;i&lt;=mid;i++) BIT::upd(e[i].c, -e[i].w);
		for(int i=l;i&lt;=r;i++) e[i] = tmp[i];
	}
	void main(int l, int r)
	{
		int mid = (l + r) &gt;&gt; 1;
		if(l == r) return;
		main(l, mid);
		main(mid+1, r);
		mergesort(l, mid, r);
	}
}

void de_weight(int &amp;cnt)
{
	sort(e+1, e+1+n);
	cnt = 1;
	for(int i=2;i&lt;=n;i++)
	{
		if(e[i].a == e[cnt].a &amp;&amp; e[i].b == e[cnt].b &amp;&amp; e[i].c == e[cnt].c) ++e[cnt].w;
		else e[++cnt] = e[i];
	}
}

int main()
{
	cin&gt;&gt;n&gt;&gt;m;
	for(int i=1;i&lt;=n;i++)
	{
		cin&gt;&gt;e[i].a&gt;&gt;e[i].b&gt;&gt;e[i].c;
		e[i].w = 1;
		e[i].f = 0;
	}
	int cnt;
	de_weight(cnt);
	cdq::main(1, cnt);
	for(int i=1;i&lt;=cnt;i++) ans[e[i].w+e[i].f-1] += e[i].w;
	for(int i=0;i&lt;n;i++) cout&lt;&lt;ans[i]&lt;&lt;endl;
	return 0;
}
</code></pre>
<h1 id="陈丹琪分治套陈丹琪分治-四维偏序问题">陈丹琪分治套陈丹琪分治 - 四维偏序问题</h1>
<p>四维偏序问题也类似，需要陈丹琪分治套陈丹琪分治套树状数组。具体思想类似，在这里不详细讲了，复杂度 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><mi>n</mi><msup><mi>log</mi><mo>⁡</mo><mn>3</mn></msup><mi>n</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">O(n\log^3 n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.148448em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8984479999999999em;"><span style="top:-3.1473400000000002em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>。</p>
<p>模板题：<a href="http://acm.hdu.edu.cn/showproblem.php?pid=5126">HDU5126@杭电</a> - Stars（没错这题也叫 Stars</p>
<p>代码：（还是引自上面那篇博客）</p>
<pre><code class="language-cpp">#include &lt;bits/stdc++.h&gt;
#define lowbit(x) ((x)&amp;(-(x)))
using namespace std;
const int maxn=400000+10;
int n,m,mp[maxn],c[maxn],ans[maxn],tot;

struct Element{
    int op,x,y,z,w,id,flag;
}e[maxn],t[maxn],d[maxn];

inline int read(){
    register int x=0,f=1;char ch=getchar();
    while(!isdigit(ch)){if(ch=='-')f=-1;ch=getchar();}
    while(isdigit(ch)){x=(x&lt;&lt;3)+(x&lt;&lt;1)+ch-'0';ch=getchar();}
    return (f==1)?x:-x;
}
void add(int x,int y){
    for(;x&lt;maxn;x+=lowbit(x)) c[x]+=y;
}
int sum(int x){
    int ans=0;
    for(;x;x-=lowbit(x)) ans+=c[x];
    return ans;
}

void CDQ3d(int l,int r){
    if(l==r) return ;
    int mid=(l+r)&gt;&gt;1;
    CDQ3d(l,mid);CDQ3d(mid+1,r);
    int p=l,q=mid+1,cnt=l;
    while(p&lt;=mid&amp;&amp;q&lt;=r){
        if(t[p].y&lt;=t[q].y){
            if(t[p].op==1&amp;&amp;t[p].flag==0)
                add(t[p].z,1);
            d[cnt++]=t[p++];
        }
        else {
            if(t[q].op==2&amp;&amp;t[q].flag==1)
                ans[t[q].id]+=t[q].w*sum(t[q].z);
            d[cnt++]=t[q++];
        }
    }
    while(p&lt;=mid){
        if(t[p].op==1&amp;&amp;t[p].flag==0)
            add(t[p].z,1);
        d[cnt++]=t[p++];
    }
    while(q&lt;=r){
        if(t[q].op==2&amp;&amp;t[q].flag==1)
            ans[t[q].id]+=t[q].w*sum(t[q].z);
        d[cnt++]=t[q++];
    }
    for(int i=l;i&lt;=mid;i++){
        if(t[i].op==1&amp;&amp;t[i].flag==0)
            add(t[i].z,-1);
    }
    for(int i=l;i&lt;=r;i++) t[i]=d[i];
}

void CDQ2d(int l,int r){
    if(l==r) return ;
    int mid=(l+r)&gt;&gt;1;
    CDQ2d(l,mid);CDQ2d(mid+1,r);
    int p=l,q=mid+1,cnt=l;
    while(p&lt;=mid&amp;&amp;q&lt;=r){
        if(e[p].x&lt;=e[q].x){
            t[cnt++]=e[p++];t[cnt-1].flag=0;
        }
        else {
            t[cnt++]=e[q++];t[cnt-1].flag=1;
        }
    }
    while(p&lt;=mid){
        t[cnt++]=e[p++];t[cnt-1].flag=0;
    }
    while(q&lt;=r){
        t[cnt++]=e[q++];t[cnt-1].flag=1;
    }
    for(int i=l;i&lt;=r;i++) e[i]=t[i];
    CDQ3d(l,r);
}

int main()
{
    int T=read();
    while(T--){
        memset(ans,0,sizeof(ans));
        m=read();tot=0;
        int op,x1,y1,z1,x2,y2,z2,t=0;
        for(int i=1;i&lt;=m;i++){
            op=read();
            if(op==1){
                x1=read(),y1=read(),z1=read();
                e[++tot]=(Element){1,x1,y1,z1,1,tot,0};
            }
            else {
                x1=read(),y1=read(),z1=read(),x2=read(),y2=read(),z2=read();
                t++;
                e[++tot]=(Element){2,x2,y2,z2,1,t,0};
                e[++tot]=(Element){2,x1-1,y2,z2,-1,t,0};
                e[++tot]=(Element){2,x2,y1-1,z2,-1,t,0};
                e[++tot]=(Element){2,x2,y2,z1-1,-1,t,0};
                e[++tot]=(Element){2,x1-1,y1-1,z2,1,t,0};
                e[++tot]=(Element){2,x1-1,y2,z1-1,1,t,0};
                e[++tot]=(Element){2,x2,y1-1,z1-1,1,t,0};
                e[++tot]=(Element){2,x1-1,y1-1,z1-1,-1,t,0};
            }
        }
        for(int i=1;i&lt;=tot;i++) mp[i]=e[i].z;
        sort(mp+1,mp+tot+1);
        int cnt=unique(mp+1,mp+tot+1)-mp-1;
        for(int i=1;i&lt;=tot;i++) e[i].z=lower_bound(mp+1,mp+cnt+1,e[i].z)-mp;
        CDQ2d(1,tot);
        for(int i=1;i&lt;=t;i++) printf(&quot;%d\n&quot;,ans[i]);
    }
    return 0;
}
</code></pre>
<h1 id="高维偏序问题ge5">高维偏序问题（<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>≥</mo><mn>5</mn></mrow><annotation encoding="application/x-tex">\ge5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">5</span></span></span></span>）</h1>
<p>在更高维的情况下陈丹琪分治也比较慢，基本就是暴力了。可以使用 bitset 优化，复杂度 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><mfrac><msup><mi>n</mi><mn>2</mn></msup><mn>32</mn></mfrac><mo>)</mo></mrow><annotation encoding="application/x-tex">O(\frac{n^2}{32})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.36292em;vertical-align:-0.345em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01792em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span>，这里不详细讲了。</p>
]]></content>
    </entry>
</feed>